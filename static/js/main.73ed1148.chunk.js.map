{"version":3,"sources":["logo.svg","theme/theme-light.js","containers/Wish/Wish.jsx","App.jsx","serviceWorker.js","index.js"],"names":["module","exports","theme","createMuiTheme","typography","props","MuiButtonBase","disableTouchRipple","focusRipple","shape","borderRadius","palette","type","primary","main","secondary","contrastText","error","success","contrastThreshold","tonalOffset","background","paper","common","black","white","text","overrides","MuiAppBar","positionFixed","backdropFilter","backgroundColor","MuiTooltip","tooltip","fontWeight","fontSize","boxShadow","arrow","color","root","transition","transform","MuiButton","label","textTransform","MuiPaper","elevation1","MuiFormHelperText","minHeight","lineHeight","animation","useStyles","makeStyles","container","display","alignItems","justifyContent","flexDirection","from","fontFamily","wisherName","textShadow","textAlign","button","Wish","classes","loc","useLocation","useState","name","setName","modalOpen","setModalOpen","setShare","eidConfig","loop","autoplay","animationData","EidAnimation","rendererSettings","preserveAspectRatio","handleClose","useEffect","console","log","values","queryString","parse","search","Box","className","mb","options","height","width","style","Typography","align","variant","mt","Button","onClick","disableElevation","Dialog","open","onClose","aria-labelledby","DialogTitle","id","DialogContent","TextField","autoFocus","margin","value","onChange","e","v","target","fullWidth","DialogActions","config","alignment","enabled","font_size","labels","language","networks","padding","radius","show_total","size","url","split","join","description","title","message","subject","App","ThemeProvider","strokeWidth","fill","href","noopener","noreferrer","class","data-color-scheme","data-size","data-show-count","aria-label","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.73ed1148.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import { createMuiTheme } from \"@material-ui/core/styles\";\n\nconst theme = createMuiTheme({\n  typography: {\n    // htmlFontSize: '20px',\n    // fontSize: 20,\n  },\n  props: {\n    MuiButtonBase: {\n      disableTouchRipple: true,\n      focusRipple: true,\n    },\n  },\n  shape: {\n    borderRadius: \"10px\",\n  },\n  palette: {\n    type: \"light\",\n    // common: { black: \"#000\", white: \"#fff\" },\n    // background: {\n    //   paper: \"#424242\",\n    //   default: \"#121212\",\n    //   level2: \"#333\",\n    //   level1: \"#212121\"\n    // },\n    primary: {\n      main: \"rgb(252, 212, 143)\",\n    },\n    secondary: {\n      main: \"#0f303b\",\n      contrastText: \"#ddd\",\n    },\n    error: {\n      main: \"#e74c3c\",\n    },\n    success: {\n      main: \"#17bf63\",\n    },\n    // text: {\n    //   primary: \"#333\"\n    // },\n    contrastThreshold: 3,\n    tonalOffset: 0.2,\n    background: {\n      paper: \"#0c232b\",\n    },\n    common: {\n      black: \"#ddd\",\n      white: \"#fff\",\n    },\n    text: {\n      primary: \"#ddd\",\n    },\n  },\n  overrides: {\n    MuiAppBar: {\n      positionFixed: {\n        backdropFilter: \"saturate(180%) blur(20px)\",\n        backgroundColor: \"rgba(255, 255, 255, 0)\",\n      },\n    },\n    MuiTooltip: {\n      tooltip: {\n        fontWeight: \"300\",\n        fontSize: \".7rem\",\n        backgroundColor: \"#333\",\n        borderRadius: \"5px\",\n        boxShadow: \"0px 0px 10px rgba(0,0,0, 0.1)\",\n      },\n      arrow: {\n        color: \"#333\",\n      },\n    },\n    MuiButtonBase: {\n      root: {\n        transition: \"all 0.2s !important\",\n        \"&:active\": {\n          transform: \"scale(0.95)\",\n        },\n      },\n    },\n    MuiButton: {\n      label: {\n        textTransform: \"capitalize\",\n        fontSize: \".9rem\",\n        fontWeight: 400,\n      },\n    },\n    MuiPaper: {\n      elevation1: {\n        boxShadow: \"0px 4px 20px rgba(0,0,0,0.05)\",\n      },\n    },\n    MuiFormHelperText: {\n      root: {\n        minHeight: \"0em\",\n        lineHeight: \"0em\",\n        animation: \"input-helperText-animate .1s ease-out  1 both\",\n      },\n    },\n  },\n});\n\nexport default theme;\n","import React, { useEffect, useState } from \"react\";\nimport {\n  Box,\n  Grid,\n  makeStyles,\n  Button,\n  Typography,\n  Dialog,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  DialogActions,\n  TextField,\n} from \"@material-ui/core\";\nimport { useLocation } from \"react-router-dom\";\nimport Lottie from \"react-lottie\";\nimport queryString from \"query-string\";\nimport { InlineShareButtons } from \"sharethis-reactjs\";\n\nimport moonAnimation from \"../../assets/lottiefiles/moon.json\";\nimport EidAnimation from \"../../assets/lottiefiles/eidMubarak.json\";\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    minHeight: \"100vh\",\n    // backgroundColor: \"\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    flexDirection: \"column\",\n  },\n  from: {\n    fontFamily: \" 'Raleway', sans-serif \",\n    textTransform: \"capitalize\",\n    color: \"#fcd48f\",\n  },\n  wisherName: {\n    textShadow: \"1px 1px 10px rgba(252, 212, 143, 0.295)\",\n    fontFamily: \"'Dancing Script', 'Raleway', sans-serif \",\n    textAlign: \"center\",\n  },\n  button: {\n    backgroundColor: \"#0c232b\",\n  },\n}));\n\nconst Wish = (props) => {\n  const classes = useStyles();\n  const loc = useLocation();\n  const [name, setName] = useState(null);\n  const [modalOpen, setModalOpen] = useState(false);\n  const [isShare, setShare] = useState(null);\n  const moonConfig = {\n    loop: true,\n    autoplay: true,\n    animationData: moonAnimation,\n    rendererSettings: {\n      preserveAspectRatio: \"xMidYMid slice\",\n    },\n  };\n  const eidConfig = {\n    loop: false,\n    autoplay: true,\n    animationData: EidAnimation,\n    rendererSettings: {\n      preserveAspectRatio: \"xMidYMid slice\",\n    },\n  };\n  const handleClickOpen = () => {\n    setModalOpen(true);\n  };\n\n  const handleClose = () => {\n    setModalOpen(false);\n  };\n  useEffect(() => {\n    console.log(loc);\n    const values = queryString.parse(loc.search);\n    setName(values.from || \"Your Name\");\n  }, []);\n  return (\n    <Box className={classes.container}>\n      <Box mb={2}>\n        <Lottie\n          options={eidConfig}\n          height={300}\n          width={300}\n          style={{ display: \"inline-block\" }}\n        />\n        <Typography className={classes.from + \" animatedFrom \"} align=\"center\">\n          From\n        </Typography>\n        <Typography\n          className={classes.wisherName + \" animamteName\"}\n          align=\"center\"\n          variant=\"h4\"\n        >\n          {name}\n        </Typography>\n        <Box mt={1} className={\"animatedBody\"}>\n          <Typography\n            style={{\n              color: \"rgb(252, 212, 143, 0.6)\",\n              fontFamily: \"'Dancing Script', 'Raleway', sans-serif \",\n            }}\n            align=\"center\"\n            variant=\"body1\"\n          >\n            May Allah bless you and your family.\n          </Typography>\n        </Box>\n      </Box>\n\n      <Button\n        color=\"secondary\"\n        variant=\"contained\"\n        onClick={handleClickOpen}\n        className={classes.button + \" animatedButton\"}\n        disableElevation\n      >\n        Edit this\n      </Button>\n      <Dialog\n        open={modalOpen}\n        onClose={handleClose}\n        aria-labelledby=\"form-dialog-title\"\n      >\n        <DialogTitle id=\"form-dialog-title\">\n          <Typography color=\"primary\">Create Greeting</Typography>\n        </DialogTitle>\n        <DialogContent>\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            color=\"primary\"\n            id=\"name\"\n            label=\"Your Name\"\n            value={name === \"Your Name\" ? \"\" : name}\n            onChange={(e) => {\n              const v = e.target.value;\n              setName(v);\n            }}\n            type=\"email\"\n            fullWidth\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button\n            onClick={() => {\n              if (name !== \"\") {\n                setShare(true);\n              }\n            }}\n            color=\"primary\"\n          >\n            Share\n          </Button>\n        </DialogActions>\n          <InlineShareButtons\n            config={{\n              alignment: \"center\", // alignment of buttons (left, center, right)\n              color: \"social\", // set the color of buttons (social, white)\n              enabled: true, // show/hide buttons (true, false)\n              font_size: 16, // font size for the buttons\n              labels: \"cta\", // button labels (cta, counts, null)\n              language: \"en\", // which language to use (see LANGUAGES)\n              networks: [\n                // which networks to include (see SHARING NETWORKS)\n                \"whatsapp\",\n                \"linkedin\",\n                \"messenger\",\n                \"facebook\",\n                \"twitter\",\n              ],\n              padding: 12, // padding within buttons (INTEGER)\n              radius: 4, // the corner radius on each button (INTEGER)\n              show_total: true,\n              size: 40, // the size of each button (INTEGER)\n              url: `https://eidwish.zubs.xyz/?from=${name\n                .split(\" \")\n                .join(\"%20\")}`,\n              // OPTIONAL PARAMETERS\n              description: `${name} has sent you a surprise, click the link to open`, // (defaults to og:description or twitter:description)\n              title: \"Happy Eid\", // (defaults to og:title or twitter:title)\n              message: \"A sweet Eid greeting\", // (only for email sharing)\n              subject: \"Happy Eid\", // (only for email sharing)\n            }}\n          />\n        )\n      </Dialog>\n    </Box>\n  );\n};\n\nexport default Wish;\n","import React, { useState } from \"react\";\nimport { Box, makeStyles, Grid, Typography } from \"@material-ui/core\";\nimport { ThemeProvider } from \"@material-ui/core/styles\";\nimport theme from \"./theme/theme-light\";\nimport Wish from \"./containers/Wish/Wish\";\nimport { Heart } from \"react-feather\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\n\nfunction App() {\n  const [url, setUrl] = useState(\"\");\n\n  const handleUrlChange = (e) => {\n    const value = e.target.value;\n    setUrl(value);\n  };\n  return (\n    <ThemeProvider theme={theme}>\n      <Wish />\n      <footer\n        style={{\n          textAlign: \"center\",\n          fontSize: \"10px\",\n          padding: \"10px\",\n          color: \"rgba(255,255,255,0.4)\",\n        }}\n      >\n        Created with <Heart size={10} strokeWidth={0} fill=\"#e74c3c\" /> By <a href=\"https://twitter.com/zubairself\" noopener noreferrer>Zubair</a>\n        <div style={{ display: 'flex', alignItems: \"center\", justifyContent: \"center\" }}>\n          <a class=\"github-button\" href=\"https://github.com/syedzubairahmed001/eid-wish\" noopener noreferrer data-color-scheme=\"no-preference: light; light: dark_high_contrast; dark: dark;\" data-size=\"large\" data-show-count=\"true\" aria-label=\"Star syedzubairahmed001/eid-wish on GitHub\">Star</a>\n        </div>\n      </footer>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}