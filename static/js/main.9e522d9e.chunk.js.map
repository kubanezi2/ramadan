{"version":3,"sources":["logo.svg","theme/theme-light.js","containers/Wish/Wish.jsx","App.jsx","serviceWorker.js","index.js"],"names":["module","exports","theme","createMuiTheme","typography","props","MuiButtonBase","disableTouchRipple","focusRipple","shape","borderRadius","palette","type","primary","main","secondary","contrastText","error","success","contrastThreshold","tonalOffset","background","paper","common","black","white","text","overrides","MuiAppBar","positionFixed","backdropFilter","backgroundColor","MuiTooltip","tooltip","fontWeight","fontSize","boxShadow","arrow","color","root","transition","transform","MuiButton","label","textTransform","MuiPaper","elevation1","MuiFormHelperText","minHeight","lineHeight","animation","useStyles","makeStyles","container","display","alignItems","justifyContent","flexDirection","from","fontFamily","wisherName","textShadow","textAlign","button","Wish","classes","loc","useLocation","useState","name","setName","modalOpen","setModalOpen","isShare","setShare","eidConfig","loop","autoplay","animationData","EidAnimation","rendererSettings","preserveAspectRatio","handleClose","useEffect","console","log","values","queryString","parse","search","Box","className","mb","options","height","width","style","Typography","align","variant","mt","Button","onClick","disableElevation","Dialog","open","onClose","aria-labelledby","DialogTitle","id","DialogContent","TextField","autoFocus","margin","value","onChange","e","v","target","fullWidth","DialogActions","config","alignment","enabled","font_size","labels","language","networks","padding","radius","show_total","size","url","replace","description","title","message","subject","App","ThemeProvider","strokeWidth","fill","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.9e522d9e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import { createMuiTheme } from \"@material-ui/core/styles\";\r\n\r\nconst theme = createMuiTheme({\r\n  typography: {\r\n    // htmlFontSize: '20px',\r\n    // fontSize: 20,\r\n  },\r\n  props: {\r\n    MuiButtonBase: {\r\n      disableTouchRipple: true,\r\n      focusRipple: true,\r\n    },\r\n  },\r\n  shape: {\r\n    borderRadius: \"10px\",\r\n  },\r\n  palette: {\r\n    type: \"light\",\r\n    // common: { black: \"#000\", white: \"#fff\" },\r\n    // background: {\r\n    //   paper: \"#424242\",\r\n    //   default: \"#121212\",\r\n    //   level2: \"#333\",\r\n    //   level1: \"#212121\"\r\n    // },\r\n    primary: {\r\n      main: \"rgb(252, 212, 143)\",\r\n    },\r\n    secondary: {\r\n      main: \"#0f303b\",\r\n      contrastText: \"#ddd\",\r\n    },\r\n    error: {\r\n      main: \"#e74c3c\",\r\n    },\r\n    success: {\r\n      main: \"#17bf63\",\r\n    },\r\n    // text: {\r\n    //   primary: \"#333\"\r\n    // },\r\n    contrastThreshold: 3,\r\n    tonalOffset: 0.2,\r\n    background: {\r\n      paper: \"#0c232b\",\r\n    },\r\n    common: {\r\n      black: \"#ddd\",\r\n      white: \"#fff\",\r\n    },\r\n    text: {\r\n      primary: \"#ddd\",\r\n    },\r\n  },\r\n  overrides: {\r\n    MuiAppBar: {\r\n      positionFixed: {\r\n        backdropFilter: \"saturate(180%) blur(20px)\",\r\n        backgroundColor: \"rgba(255, 255, 255, 0)\",\r\n      },\r\n    },\r\n    MuiTooltip: {\r\n      tooltip: {\r\n        fontWeight: \"300\",\r\n        fontSize: \".7rem\",\r\n        backgroundColor: \"#333\",\r\n        borderRadius: \"5px\",\r\n        boxShadow: \"0px 0px 10px rgba(0,0,0, 0.1)\",\r\n      },\r\n      arrow: {\r\n        color: \"#333\",\r\n      },\r\n    },\r\n    MuiButtonBase: {\r\n      root: {\r\n        transition: \"all 0.2s !important\",\r\n        \"&:active\": {\r\n          transform: \"scale(0.95)\",\r\n        },\r\n      },\r\n    },\r\n    MuiButton: {\r\n      label: {\r\n        textTransform: \"capitalize\",\r\n        fontSize: \".9rem\",\r\n        fontWeight: 400,\r\n      },\r\n    },\r\n    MuiPaper: {\r\n      elevation1: {\r\n        boxShadow: \"0px 4px 20px rgba(0,0,0,0.05)\",\r\n      },\r\n    },\r\n    MuiFormHelperText: {\r\n      root: {\r\n        minHeight: \"0em\",\r\n        lineHeight: \"0em\",\r\n        animation: \"input-helperText-animate .1s ease-out  1 both\",\r\n      },\r\n    },\r\n  },\r\n});\r\n\r\nexport default theme;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Box,\r\n  Grid,\r\n  makeStyles,\r\n  Button,\r\n  Typography,\r\n  Dialog,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n  DialogActions,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport Lottie from \"react-lottie\";\r\nimport queryString from \"query-string\";\r\nimport { InlineShareButtons } from \"sharethis-reactjs\";\r\n\r\nimport moonAnimation from \"../../assets/lottiefiles/moon.json\";\r\nimport EidAnimation from \"../../assets/lottiefiles/eidMubarak.json\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    minHeight: \"100vh\",\r\n    // backgroundColor: \"\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    flexDirection: \"column\",\r\n  },\r\n  from: {\r\n    fontFamily: \" 'Raleway', sans-serif \",\r\n    textTransform: \"capitalize\",\r\n    color: \"#fcd48f\",\r\n  },\r\n  wisherName: {\r\n    textShadow: \"1px 1px 10px rgba(252, 212, 143, 0.295)\",\r\n    fontFamily: \"'Dancing Script', 'Raleway', sans-serif \",\r\n    textAlign: \"center\",\r\n  },\r\n  button: {\r\n    backgroundColor: \"#0c232b\",\r\n  },\r\n}));\r\n\r\nconst Wish = (props) => {\r\n  const classes = useStyles();\r\n  const loc = useLocation();\r\n  const [name, setName] = useState(null);\r\n  const [modalOpen, setModalOpen] = useState(false);\r\n  const [isShare, setShare] = useState(null);\r\n  const moonConfig = {\r\n    loop: true,\r\n    autoplay: true,\r\n    animationData: moonAnimation,\r\n    rendererSettings: {\r\n      preserveAspectRatio: \"xMidYMid slice\",\r\n    },\r\n  };\r\n  const eidConfig = {\r\n    loop: false,\r\n    autoplay: true,\r\n    animationData: EidAnimation,\r\n    rendererSettings: {\r\n      preserveAspectRatio: \"xMidYMid slice\",\r\n    },\r\n  };\r\n  const handleClickOpen = () => {\r\n    setModalOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setModalOpen(false);\r\n  };\r\n  useEffect(() => {\r\n    console.log(loc);\r\n    const values = queryString.parse(loc.search);\r\n    setName(values.from || \"Your Name\");\r\n  }, []);\r\n  return (\r\n    <Box className={classes.container}>\r\n      <Box mb={2}>\r\n        <Lottie\r\n          options={eidConfig}\r\n          height={300}\r\n          width={300}\r\n          style={{ display: \"inline-block\" }}\r\n        />\r\n        <Typography className={classes.from + ' animatedFrom '} align=\"center\">\r\n          From\r\n        </Typography>\r\n        <Typography className={classes.wisherName + ' animamteName'} align=\"center\" variant=\"h4\">\r\n          {name}\r\n        </Typography>\r\n        <Box mt={1} className={'animatedBody'}>\r\n          <Typography\r\n            style={{\r\n              color: \"rgb(252, 212, 143, 0.6)\",\r\n              fontFamily: \"'Dancing Script', 'Raleway', sans-serif \",\r\n            }}\r\n            align=\"center\"\r\n            variant=\"body1\"\r\n          >\r\n            May Allah bless you and your family.\r\n          </Typography>\r\n        </Box>\r\n      </Box>\r\n\r\n      <Button\r\n        color=\"secondary\"\r\n        variant=\"contained\"\r\n        onClick={handleClickOpen}\r\n        className={classes.button + ' animatedButton'}\r\n        disableElevation\r\n      >\r\n        Edit this\r\n      </Button>\r\n      <Dialog\r\n        open={modalOpen}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"form-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">\r\n          <Typography color=\"primary\">Create Greeting</Typography>\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            color=\"primary\"\r\n            id=\"name\"\r\n            label=\"Your Name\"\r\n            value={name === \"Your Name\" ? \"\" : name}\r\n            onChange={(e) => {\r\n              const v = e.target.value;\r\n              setName(v);\r\n            }}\r\n            type=\"email\"\r\n            fullWidth\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button\r\n            onClick={() => {\r\n              if (name !== \"\") {\r\n                setShare(true);\r\n              }\r\n            }}\r\n            color=\"primary\"\r\n          >\r\n            Share\r\n          </Button>\r\n        </DialogActions>\r\n        {isShare && (\r\n          <InlineShareButtons\r\n            config={{\r\n              alignment: \"center\", // alignment of buttons (left, center, right)\r\n              color: \"social\", // set the color of buttons (social, white)\r\n              enabled: true, // show/hide buttons (true, false)\r\n              font_size: 16, // font size for the buttons\r\n              labels: \"cta\", // button labels (cta, counts, null)\r\n              language: \"en\", // which language to use (see LANGUAGES)\r\n              networks: [\r\n                // which networks to include (see SHARING NETWORKS)\r\n                \"whatsapp\",\r\n                \"linkedin\",\r\n                \"messenger\",\r\n                \"facebook\",\r\n                \"twitter\",\r\n              ],\r\n              padding: 12, // padding within buttons (INTEGER)\r\n              radius: 4, // the corner radius on each button (INTEGER)\r\n              show_total: true,\r\n              size: 40, // the size of each button (INTEGER)\r\n              url: `https://surprise.zubs.xyz/?from=${name.replace(\r\n                \" \",\r\n                \"%20\"\r\n              )}`,\r\n              // OPTIONAL PARAMETERS\r\n              description: `${name} has sent you a surprise, click the link to open`, // (defaults to og:description or twitter:description)\r\n              title: \"Surprice\", // (defaults to og:title or twitter:title)\r\n              message: \"Surprise\", // (only for email sharing)\r\n              subject: \"Surprise\", // (only for email sharing)\r\n            }}\r\n          />\r\n        )}\r\n      </Dialog>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Wish;\r\n","import React, { useState } from \"react\";\nimport { Box, makeStyles, Grid, Typography } from \"@material-ui/core\";\nimport { ThemeProvider } from \"@material-ui/core/styles\";\nimport theme from \"./theme/theme-light\";\nimport Wish from \"./containers/Wish/Wish\";\nimport { Heart } from \"react-feather\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\n\nfunction App() {\n  const [url, setUrl] = useState(\"\");\n\n  const handleUrlChange = (e) => {\n    const value = e.target.value;\n    setUrl(value);\n  };\n  return (\n    <ThemeProvider theme={theme}>\n      <Wish />\n      <footer\n        style={{\n          textAlign: \"center\",\n          fontSize: \"10px\",\n          padding: \"10px\",\n          color: \"rgba(255,255,255,0.4)\",\n        }}\n      >\n        Created with <Heart size={10} strokeWidth={0} fill=\"#e74c3c\" /> in India\n      </footer>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}